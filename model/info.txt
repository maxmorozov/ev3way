Смоделировано поведение балансирующего робота с двумя типами колёс - штатные колёса EV3 и колёса от мотоцикла Lego 8051.
Использованы следующие параметры модели:
1. EV3

	param_plant.m
	m = 0.015;						% wheel weight [kg]
	R = 0.0215;						% wheel radius [m]
	Jw = m * R^2 / 2;				% wheel inertia moment [kgm^2]

	M = 0.634;						% body weight [kg]
	W = 0.158;						% body width [m]
	D = 0.04;						% body depth [m]
	H = 0.166;						% body height [m]


	% DC Motor Parameters			
	Jm = 0.0015027;					% DC motor inertia moment [kgm^2]
	Rm = 6.8327;					% DC motor resistance [Ohm]
	Kb = 0.459965;					% DC motor back EMF constant [Vsec/rad]
	Kt = 0.304766;					% DC motor torque constant [Nm/A]

	param_controler.m
	k_thetadot = 0.2 / R;			% speed gain (0.2 [m/sec])

	Получены коэффициенты
	При тех же весовых матрицах, что и в исходной работе:
	    static final float K_F1 = -0.770037357557574F * DEG2RAD;
	    static final float K_F2 = -84.1899879423200F * DEG2RAD;
	    static final float K_F3 = -1.22027762814827F * DEG2RAD;
	    static final float K_F4 = -9.28721276122188F * DEG2RAD;

	    static final float K_I = -0.416689176972853F * DEG2RAD; // servo control integral gain

	    static final float K_THETADOT = 9.30232558139535F / DEG2RAD;   // forward target speed gain 0.2 m/s


2. Колёса от 8051

	param_plant.m
	m = 0.035;						% wheel weight [kg]
	R = 0.0475;						% wheel radius [m]
	Jw = m * R^2;           		% wheel inertia moment [kgm^2]

	M = 0.656;						% body weight [kg]
	W = 0.165;						% body width [m]
	D = 0.04;						% body depth [m]
	H = 0.166;						% body height [m]


	% DC Motor Parameters			
	Jm = 0.0015027;					% DC motor inertia moment [kgm^2]
	Rm = 6.8327;					% DC motor resistance [Ohm]
	Kb = 0.459965;					% DC motor back EMF constant [Vsec/rad]
	Kt = 0.304766;					% DC motor torque constant [Nm/A]

	param_controler.m
	k_thetadot = 0.3 / R;			% speed gain (0.3 [m/sec])

	Получены коэффициенты
	При тех же весовых матрицах, что и в исходной работе:
	    static final float K_F1 = -0.824844186088244F * DEG2RAD;
	    static final float K_F2 = -41.4074441149571F * DEG2RAD;
	    static final float K_F3 = -1.32276811679559F * DEG2RAD;
	    static final float K_F4 = -4.40904857993352F * DEG2RAD;

	    static final float K_I = -0.417915074452005F * DEG2RAD; // servo control integral gain

	    static final float K_THETADOT = 6.31578947368421F / DEG2RAD;   // forward target speed gain 0.2 m/s


			
